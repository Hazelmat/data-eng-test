[tox]
envlist = {py39}-{static, compat-check, unit}
usedevelop = True
requires =
    virtualenv >= 20.0.0
    pip>=23.1.2
parallel_show_output = true
isolated_build = true

[testenv]
setenv =
    PYTHONHASHSEED = 0
    VIRTUALENV_PIP=23.1.2
deps =
    -r{toxinidir}/requirements-dev.txt
    -r{toxinidir}/requirements.txt
commands =
    pre-commit run --all-files --show-diff-on-failure

[with-dev-deps]
envdir =
    py39: {toxworkdir}/py39-with-dev-deps

[testenv:{py39}-static]
description = Static tests, e.g. type-checking, linting, formatting.
skip_install = true
envdir = {[with-dev-deps]envdir}
install_command = python -m pip install {opts} {packages}
deps =
    pre-commit~=2.0
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure

[testenv:{py39}-compat-check]
description = Check for version conflicts in installed dependencies.
envdir = {[with-dev-deps]envdir}
commands =
    pip check

[testenv:{py39}-unit]
description = Run unit tests.
envdir = {[with-dev-deps]envdir}
depends =
    py39: py39-compat-check
commands =
    coverage erase
    ; `python -m pytest` as opposed to `pytest` places the root on sys.path, which makes importing from, say, tests/
    ; easier
    python -m pytest --cov=tests --cov-append \
        --cov-report=html:cobertura/html --cov-report=xml:cobertura/coverage.xml \
        --junitxml=test-results/junit.xml tests

[flake8]
extend-ignore = E203
no-isort-config = True
max-line-length = 120
ignore = W291, E203, E266, E501, W503, F403, F401, E731, E721, C901, E711, W293, E999, B008
max-complexity = 18
select = B,C,E,F,W,T4,B9
show-source = true
exclude=
    .venv,
    .tox,
    .git,
    dist,
    docs,
    *.egg,
    build,
    docker,
    *_pb2.py,
    *_pb2_grpc.py,
    *_pb2.pyi
